<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>操作系统</title>
    <link href="/2023/02/09/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    <url>/2023/02/09/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/</url>
    
    <content type="html"><![CDATA[<h1 id="2-进程"><a href="#2-进程" class="headerlink" title="2.进程"></a>2.进程</h1><h2 id="进程的定义："><a href="#进程的定义：" class="headerlink" title="进程的定义："></a>进程的定义：</h2><p>进程映像： </p><p><img src="/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F.assets/image-20230209145457788.png" alt="image-20230209145457788"></p><p><img src="/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F.assets/image-20230209145538850.png" alt="image-20230209145538850"></p><h2 id="进程状态的转换"><a href="#进程状态的转换" class="headerlink" title="进程状态的转换"></a>进程状态的转换</h2><p><img src="/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F.assets/image-20230209150430624.png" alt="image-20230209150430624"></p><p><img src="/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F.assets/image-20230209150555790.png" alt="image-20230209150555790"></p><h2 id="进程的组织方式"><a href="#进程的组织方式" class="headerlink" title="进程的组织方式"></a>进程的组织方式</h2><ol><li><p>线性方式</p><p>把所有的PCB放置在一张线性表中，每次查找时需要扫描整张表。</p></li><li><p>链接方式</p><p>把所有状态相同的PCB使用链表链接，形成就绪队列、阻塞队列和空白队列等若干队列</p><p><img src="/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F.assets/image-20230209151326851.png" alt="image-20230209151326851"></p></li><li><p>索引方式</p><p>系统根据进程的不同状态，创建不同状态的索引表，每张表中存储对应状态的PCB地址</p><p><img src="/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F.assets/image-20230209151554990.png" alt="image-20230209151554990"></p></li></ol><h2 id="进程的控制"><a href="#进程的控制" class="headerlink" title="进程的控制"></a>进程的控制</h2><h3 id="原语"><a href="#原语" class="headerlink" title="原语"></a>原语</h3><p>定义：</p><p>原语的执行具有原子性，即执行过程只能一气呵成，期间不允许被中断。原语使用“关中断指令” 和“开中断指令”这两个特权指令实现原子性</p><p>CPU每执行完一条指令后就检查是否有中断信号，如果有的话就执行关中断，然后不再检查中断信号，直到执行开中断信号。</p>]]></content>
    
    
    
    <tags>
      
      <tag>操作系统</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Nginx 学习历程</title>
    <link href="/2023/02/07/Nginx-%E5%AD%A6%E4%B9%A0%E5%8E%86%E7%A8%8B/"/>
    <url>/2023/02/07/Nginx-%E5%AD%A6%E4%B9%A0%E5%8E%86%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[<h1 id="1-nginx"><a href="#1-nginx" class="headerlink" title="1.nginx"></a>1.nginx</h1><p><em>Nginx</em> (engine x) 是一个高性能的<a href="https://baike.baidu.com/item/HTTP?fromModule=lemma_inlink">HTTP</a>和<a href="https://baike.baidu.com/item/%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86/7793488?fromModule=lemma_inlink">反向代理</a>web服务器</p><h1 id="2-安装步骤"><a href="#2-安装步骤" class="headerlink" title="2.安装步骤"></a>2.安装步骤</h1><h1 id="3-反向代理"><a href="#3-反向代理" class="headerlink" title="3.反向代理"></a>3.反向代理</h1><blockquote><p>Nginx 反向代理 </p></blockquote><p><code>test</code></p>]]></content>
    
    
    
    <tags>
      
      <tag>nginx</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>My First Blog</title>
    <link href="/2023/02/05/My-First-Blog/"/>
    <url>/2023/02/05/My-First-Blog/</url>
    
    <content type="html"><![CDATA[<p>This will be uploaded into my website :<a href="http://www.codingxiaofu.com/">www.codingxiaofu.com</a> .</p>]]></content>
    
    
    
    <tags>
      
      <tag>随笔</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2023/02/05/hello-world/"/>
    <url>/2023/02/05/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
